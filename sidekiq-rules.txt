# Metrics Sample
#----------------------------------
#  production.worker.AddEndangeredWorker.processing_time:1113|ms
#  production.worker.AddEndangeredWorker.success:1|c
#  production.worker.enqueued:0|g
#  production.worker.retry_set_size:0|g
#  production.worker.processed:69|g
#  production.worker.failed:0|g
#  production.worker.queues.default.enqueued:0|g
#  production.worker.queues.default.latency:0|g

# TAGTYPE OPTIONS
#-----------------------
# Default value is `None` i.e. no custom tags present.
# TAGTYPE = Datadog
#       - Sample metric: cpuUtil:35|c|#_tag_appName:testApp1,_tag_projectName:apmProject,_documentType:cpuStats
# TAGTYPE = Influx
#       - Sample metric: cpuUtil,_tag_appName=testApp1,_tag_projectName=apmProject,_documentType=cpuStats:35|c
# TAGTYPE = Graphite
#       - Sample metric: cpuUtil;_tag_appName=testApp1;_tag_projectName=apmProject;_documentType=cpuStats:35|c
TAGTYPE = None


# SUPPORTED DATATYPES:  float, double, interger, short, long

worker = NESTED(namespace: production, prefix: worker, key: worker_name, metric:[processing_time:double, success:float])
workerQueues = NESTED(namespace: production, prefix: worker.queues, key: queue_name, metric:[runtime:double, processing:float, enqueued:float, latency:float])
enqueuedJobs = FLAT(namespace: production, prefix: worker, metric: enqueued:integer)
retrySetSize = FLAT(namespace: production, prefix: worker, metric: retry_set_size:integer)
processedJobs = FLAT(namespace: production, prefix: worker, metric: processed:integer)
failedJobs = FLAT(namespace: production, prefix: worker, metric: failed:integer)

RENDER(_documentType: sidekiq,  worker, workerQueues, processedJobs, enqueuedJobs, retrySetSize, failedJobs)
